#pragma once
#include <vector>
#include "Hash_table_inspectors.h"
#include <msclr\marshal_cppstd.h>
#include <filesystem>
#include "AVL_inspectors.h"


namespace Gibdd3 {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;

	int sizeHT=-2;

	bool import_inspectors = false;
	bool sizeHT_first_inspectors = false;

	std::vector<list*> Record_inspectors = std::vector<list*>(0);


	auto Hashtable_inspectors = new HTable(15);
	/// <summary>
	/// Сводка для MyForm
	/// </summary>
	public ref class MyForm : public System::Windows::Forms::Form
	{
	public:
		MyForm(void)
		{
			InitializeComponent();
			//
			//TODO: добавьте код конструктора
			//
		}

	protected:
		/// <summary>
		/// Освободить все используемые ресурсы.
		/// </summary>
		~MyForm()
		{
			if (components)
			{
				delete components;
			}
		}
	private: System::Windows::Forms::TabControl^ tabControl;
	private: System::Windows::Forms::TabPage^ Inspectors;
	private: System::Windows::Forms::TabPage^ Candidates;
	private: System::Windows::Forms::TabPage^ Rezult;
	private: System::Windows::Forms::RichTextBox^ Text_inspectors;
	private: System::Windows::Forms::RichTextBox^ inspectors_rez;
	private: System::Windows::Forms::TabPage^ Otladka;
	private: System::Windows::Forms::TextBox^ textBox_city_inspectors;


	private: System::Windows::Forms::Label^ label5;
	private: System::Windows::Forms::TextBox^ textBox_num_inspectors;
	private: System::Windows::Forms::Label^ label4;
	private: System::Windows::Forms::TextBox^ textBox_titul_1;
	private: System::Windows::Forms::Label^ label3;
	private: System::Windows::Forms::TextBox^ textBox_name_inspectors;
	private: System::Windows::Forms::Label^ label2;
	private: System::Windows::Forms::Label^ label1;

	private: System::Windows::Forms::Label^ label6;
	private: System::Windows::Forms::TextBox^ textBox6;
	private: System::Windows::Forms::Label^ label7;
	private: System::Windows::Forms::TextBox^ textBox7;
	private: System::Windows::Forms::Label^ label8;
	private: System::Windows::Forms::TextBox^ textBox8;
	private: System::Windows::Forms::Label^ label9;
	private: System::Windows::Forms::Label^ label10;
	private: System::Windows::Forms::RichTextBox^ richTextBox1;
	private: System::Windows::Forms::RichTextBox^ richTextBox2;
	private: System::Windows::Forms::Button^ button1;
	private: System::Windows::Forms::Button^ button2;
	private: System::Windows::Forms::Button^ button3;
	private: System::Windows::Forms::Button^ button4;
	private: System::Windows::Forms::Button^ button10;
	private: System::Windows::Forms::TextBox^ textBox5;
	private: System::Windows::Forms::TextBox^ textBox10;
	private: System::Windows::Forms::TextBox^ textBox9;
	private: System::Windows::Forms::TextBox^ textBox11;

	private: System::Windows::Forms::TextBox^ textBox13;
	private: System::Windows::Forms::Button^ button11;
	private: System::Windows::Forms::Button^ button12;
	private: System::Windows::Forms::Button^ button13;
	private: System::Windows::Forms::Button^ button14;
	private: System::Windows::Forms::Button^ button15;
	private: System::Windows::Forms::Label^ label11;
	private: System::Windows::Forms::TextBox^ textBox14;
	private: System::Windows::Forms::Label^ label12;
	private: System::Windows::Forms::TextBox^ textBox15;
	private: System::Windows::Forms::Label^ label13;

	private: System::Windows::Forms::Label^ label14;
	private: System::Windows::Forms::Label^ label15;
	private: System::Windows::Forms::RichTextBox^ richTextBox3;
	private: System::Windows::Forms::RichTextBox^ richTextBox4;

	private: System::Windows::Forms::Label^ label19;
	private: System::Windows::Forms::TextBox^ inspectors_sizeHT;
	private: System::Windows::Forms::Button^ button6;
	private: System::Windows::Forms::Button^ button7;
	private: System::Windows::Forms::Button^ import_record_inspectors_button;
	private: System::Windows::Forms::Button^ button9;
	private: System::Windows::Forms::Button^ add_inspectors;
	private: System::Windows::Forms::Button^ import_sizeHT_candidates;
	private: System::Windows::Forms::Label^ label18;
	private: System::Windows::Forms::TextBox^ candidates_sizeHT;
	private: System::Windows::Forms::Label^ label17;
	private: System::Windows::Forms::Label^ label16;
	private: System::Windows::Forms::TextBox^ textBox16;
	private: System::Windows::Forms::TextBox^ textBox17;
	private: System::Windows::Forms::TextBox^ textBox18;
	private: System::Windows::Forms::RichTextBox^ richTextBox_otladka;
	private: System::Windows::Forms::Label^ label24;
	private: System::Windows::Forms::Button^ button18;
	private: System::Windows::Forms::Button^ button19;
	private: System::Windows::Forms::Button^ button20;
	private: System::Windows::Forms::Button^ button21;
	private: System::Windows::Forms::Button^ button22;
	private: System::Windows::Forms::Label^ label20;
	private: System::Windows::Forms::Button^ button23;

	private: System::Windows::Forms::Button^ button25;
	private: System::Windows::Forms::Button^ button26;
	private: System::Windows::Forms::Button^ hashtable_num_inspectors;
	private: System::Windows::Forms::Label^ label21;
	private: System::Windows::Forms::Button^ button28;
	private: System::Windows::Forms::Button^ button29;

	private: System::Windows::Forms::Button^ button31;
	private: System::Windows::Forms::Button^ button32;
	private: System::Windows::Forms::Label^ label22;
	private: System::Windows::Forms::Label^ label23;
	private: System::Windows::Forms::Button^ import_sizeHT_inspectors;
private: System::Windows::Forms::TextBox^ textBox_third_name_inspectors;
private: System::Windows::Forms::TextBox^ textBox_second_name_inspectors;
private: System::Windows::Forms::TextBox^ textBox_titul_2;////
private: System::Windows::Forms::TextBox^ textBox_home_inspectors;
private: System::Windows::Forms::TextBox^ textBox_street_inspectors;

	   



	protected:

	private: System::ComponentModel::IContainer^ components;




#pragma region Windows Form Designer generated code
		   /// <summary>
		   /// Требуемый метод для поддержки конструктора — не изменяйте 
		   /// содержимое этого метода с помощью редактора кода.
		   /// </summary>
		   void InitializeComponent(void)
		   {
			   System::ComponentModel::ComponentResourceManager^ resources = (gcnew System::ComponentModel::ComponentResourceManager(MyForm::typeid));
			   this->tabControl = (gcnew System::Windows::Forms::TabControl());
			   this->Inspectors = (gcnew System::Windows::Forms::TabPage());
			   this->textBox_home_inspectors = (gcnew System::Windows::Forms::TextBox());
			   this->textBox_street_inspectors = (gcnew System::Windows::Forms::TextBox());
			   this->textBox_titul_2 = (gcnew System::Windows::Forms::TextBox());
			   this->textBox_third_name_inspectors = (gcnew System::Windows::Forms::TextBox());
			   this->textBox_second_name_inspectors = (gcnew System::Windows::Forms::TextBox());
			   this->import_sizeHT_inspectors = (gcnew System::Windows::Forms::Button());
			   this->label19 = (gcnew System::Windows::Forms::Label());
			   this->button6 = (gcnew System::Windows::Forms::Button());
			   this->button7 = (gcnew System::Windows::Forms::Button());
			   this->import_record_inspectors_button = (gcnew System::Windows::Forms::Button());
			   this->button9 = (gcnew System::Windows::Forms::Button());
			   this->add_inspectors = (gcnew System::Windows::Forms::Button());
			   this->textBox_city_inspectors = (gcnew System::Windows::Forms::TextBox());
			   this->label5 = (gcnew System::Windows::Forms::Label());
			   this->textBox_num_inspectors = (gcnew System::Windows::Forms::TextBox());
			   this->label4 = (gcnew System::Windows::Forms::Label());
			   this->textBox_titul_1 = (gcnew System::Windows::Forms::TextBox());
			   this->label3 = (gcnew System::Windows::Forms::Label());
			   this->textBox_name_inspectors = (gcnew System::Windows::Forms::TextBox());
			   this->label2 = (gcnew System::Windows::Forms::Label());
			   this->label1 = (gcnew System::Windows::Forms::Label());
			   this->inspectors_rez = (gcnew System::Windows::Forms::RichTextBox());
			   this->Text_inspectors = (gcnew System::Windows::Forms::RichTextBox());
			   this->inspectors_sizeHT = (gcnew System::Windows::Forms::TextBox());
			   this->Candidates = (gcnew System::Windows::Forms::TabPage());
			   this->import_sizeHT_candidates = (gcnew System::Windows::Forms::Button());
			   this->label18 = (gcnew System::Windows::Forms::Label());
			   this->candidates_sizeHT = (gcnew System::Windows::Forms::TextBox());
			   this->textBox5 = (gcnew System::Windows::Forms::TextBox());
			   this->textBox10 = (gcnew System::Windows::Forms::TextBox());
			   this->textBox9 = (gcnew System::Windows::Forms::TextBox());
			   this->button1 = (gcnew System::Windows::Forms::Button());
			   this->button2 = (gcnew System::Windows::Forms::Button());
			   this->button3 = (gcnew System::Windows::Forms::Button());
			   this->button4 = (gcnew System::Windows::Forms::Button());
			   this->button10 = (gcnew System::Windows::Forms::Button());
			   this->label6 = (gcnew System::Windows::Forms::Label());
			   this->textBox6 = (gcnew System::Windows::Forms::TextBox());
			   this->label7 = (gcnew System::Windows::Forms::Label());
			   this->textBox7 = (gcnew System::Windows::Forms::TextBox());
			   this->label8 = (gcnew System::Windows::Forms::Label());
			   this->textBox8 = (gcnew System::Windows::Forms::TextBox());
			   this->label9 = (gcnew System::Windows::Forms::Label());
			   this->label10 = (gcnew System::Windows::Forms::Label());
			   this->richTextBox1 = (gcnew System::Windows::Forms::RichTextBox());
			   this->richTextBox2 = (gcnew System::Windows::Forms::RichTextBox());
			   this->Rezult = (gcnew System::Windows::Forms::TabPage());
			   this->label17 = (gcnew System::Windows::Forms::Label());
			   this->label16 = (gcnew System::Windows::Forms::Label());
			   this->textBox16 = (gcnew System::Windows::Forms::TextBox());
			   this->textBox17 = (gcnew System::Windows::Forms::TextBox());
			   this->textBox18 = (gcnew System::Windows::Forms::TextBox());
			   this->textBox11 = (gcnew System::Windows::Forms::TextBox());
			   this->textBox13 = (gcnew System::Windows::Forms::TextBox());
			   this->button11 = (gcnew System::Windows::Forms::Button());
			   this->button12 = (gcnew System::Windows::Forms::Button());
			   this->button13 = (gcnew System::Windows::Forms::Button());
			   this->button14 = (gcnew System::Windows::Forms::Button());
			   this->button15 = (gcnew System::Windows::Forms::Button());
			   this->label11 = (gcnew System::Windows::Forms::Label());
			   this->textBox14 = (gcnew System::Windows::Forms::TextBox());
			   this->label12 = (gcnew System::Windows::Forms::Label());
			   this->textBox15 = (gcnew System::Windows::Forms::TextBox());
			   this->label13 = (gcnew System::Windows::Forms::Label());
			   this->label14 = (gcnew System::Windows::Forms::Label());
			   this->label15 = (gcnew System::Windows::Forms::Label());
			   this->richTextBox3 = (gcnew System::Windows::Forms::RichTextBox());
			   this->richTextBox4 = (gcnew System::Windows::Forms::RichTextBox());
			   this->Otladka = (gcnew System::Windows::Forms::TabPage());
			   this->richTextBox_otladka = (gcnew System::Windows::Forms::RichTextBox());
			   this->label24 = (gcnew System::Windows::Forms::Label());
			   this->button18 = (gcnew System::Windows::Forms::Button());
			   this->button19 = (gcnew System::Windows::Forms::Button());
			   this->button20 = (gcnew System::Windows::Forms::Button());
			   this->button21 = (gcnew System::Windows::Forms::Button());
			   this->button22 = (gcnew System::Windows::Forms::Button());
			   this->label20 = (gcnew System::Windows::Forms::Label());
			   this->button23 = (gcnew System::Windows::Forms::Button());
			   this->button25 = (gcnew System::Windows::Forms::Button());
			   this->button26 = (gcnew System::Windows::Forms::Button());
			   this->hashtable_num_inspectors = (gcnew System::Windows::Forms::Button());
			   this->label21 = (gcnew System::Windows::Forms::Label());
			   this->button28 = (gcnew System::Windows::Forms::Button());
			   this->button29 = (gcnew System::Windows::Forms::Button());
			   this->button31 = (gcnew System::Windows::Forms::Button());
			   this->button32 = (gcnew System::Windows::Forms::Button());
			   this->label22 = (gcnew System::Windows::Forms::Label());
			   this->label23 = (gcnew System::Windows::Forms::Label());
			   this->tabControl->SuspendLayout();
			   this->Inspectors->SuspendLayout();
			   this->Candidates->SuspendLayout();
			   this->Rezult->SuspendLayout();
			   this->Otladka->SuspendLayout();
			   this->SuspendLayout();
			   // 
			   // tabControl
			   // 
			   this->tabControl->Controls->Add(this->Inspectors);
			   this->tabControl->Controls->Add(this->Candidates);
			   this->tabControl->Controls->Add(this->Rezult);
			   this->tabControl->Controls->Add(this->Otladka);
			   this->tabControl->Location = System::Drawing::Point(-1, 0);
			   this->tabControl->Name = L"tabControl";
			   this->tabControl->SelectedIndex = 0;
			   this->tabControl->Size = System::Drawing::Size(1455, 650);
			   this->tabControl->TabIndex = 0;
			   // 
			   // Inspectors
			   // 
			   this->Inspectors->AutoScroll = true;
			   this->Inspectors->BackColor = System::Drawing::Color::LightSteelBlue;
			   this->Inspectors->Controls->Add(this->textBox_home_inspectors);
			   this->Inspectors->Controls->Add(this->textBox_street_inspectors);
			   this->Inspectors->Controls->Add(this->textBox_titul_2);
			   this->Inspectors->Controls->Add(this->textBox_third_name_inspectors);
			   this->Inspectors->Controls->Add(this->textBox_second_name_inspectors);
			   this->Inspectors->Controls->Add(this->import_sizeHT_inspectors);
			   this->Inspectors->Controls->Add(this->label19);
			   this->Inspectors->Controls->Add(this->button6);
			   this->Inspectors->Controls->Add(this->button7);
			   this->Inspectors->Controls->Add(this->import_record_inspectors_button);
			   this->Inspectors->Controls->Add(this->button9);
			   this->Inspectors->Controls->Add(this->add_inspectors);
			   this->Inspectors->Controls->Add(this->textBox_city_inspectors);
			   this->Inspectors->Controls->Add(this->label5);
			   this->Inspectors->Controls->Add(this->textBox_num_inspectors);
			   this->Inspectors->Controls->Add(this->label4);
			   this->Inspectors->Controls->Add(this->textBox_titul_1);
			   this->Inspectors->Controls->Add(this->label3);
			   this->Inspectors->Controls->Add(this->textBox_name_inspectors);
			   this->Inspectors->Controls->Add(this->label2);
			   this->Inspectors->Controls->Add(this->label1);
			   this->Inspectors->Controls->Add(this->inspectors_rez);
			   this->Inspectors->Controls->Add(this->Text_inspectors);
			   this->Inspectors->Controls->Add(this->inspectors_sizeHT);
			   this->Inspectors->Location = System::Drawing::Point(4, 25);
			   this->Inspectors->Name = L"Inspectors";
			   this->Inspectors->Padding = System::Windows::Forms::Padding(3);
			   this->Inspectors->Size = System::Drawing::Size(1447, 621);
			   this->Inspectors->TabIndex = 0;
			   this->Inspectors->Text = L"Инспекторы";
			   // 
			   // textBox_home_inspectors
			   // 
			   this->textBox_home_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->textBox_home_inspectors->Location = System::Drawing::Point(1356, 314);
			   this->textBox_home_inspectors->Name = L"textBox_home_inspectors";
			   this->textBox_home_inspectors->Size = System::Drawing::Size(55, 34);
			   this->textBox_home_inspectors->TabIndex = 84;
			   this->textBox_home_inspectors->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_home_inspectors_TextChanged);
			   // 
			   // textBox_street_inspectors
			   // 
			   this->textBox_street_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->textBox_street_inspectors->Location = System::Drawing::Point(1216, 314);
			   this->textBox_street_inspectors->Name = L"textBox_street_inspectors";
			   this->textBox_street_inspectors->Size = System::Drawing::Size(134, 34);
			   this->textBox_street_inspectors->TabIndex = 83;
			   this->textBox_street_inspectors->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_street_inspectors_TextChanged);
			   // 
			   // textBox_titul_2
			   // 
			   this->textBox_titul_2->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox_titul_2->Location = System::Drawing::Point(1280, 169);
			   this->textBox_titul_2->Name = L"textBox_titul_2";
			   this->textBox_titul_2->Size = System::Drawing::Size(131, 34);
			   this->textBox_titul_2->TabIndex = 82;
			   this->textBox_titul_2->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_titul_2_TextChanged);
			   // 
			   // textBox_third_name_inspectors
			   // 
			   this->textBox_third_name_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->textBox_third_name_inspectors->Location = System::Drawing::Point(1311, 95);
			   this->textBox_third_name_inspectors->Name = L"textBox_third_name_inspectors";
			   this->textBox_third_name_inspectors->Size = System::Drawing::Size(100, 34);
			   this->textBox_third_name_inspectors->TabIndex = 81;
			   this->textBox_third_name_inspectors->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_third_name_inspectors_TextChanged);
			   // 
			   // textBox_second_name_inspectors
			   // 
			   this->textBox_second_name_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->textBox_second_name_inspectors->Location = System::Drawing::Point(1216, 95);
			   this->textBox_second_name_inspectors->Name = L"textBox_second_name_inspectors";
			   this->textBox_second_name_inspectors->Size = System::Drawing::Size(89, 34);
			   this->textBox_second_name_inspectors->TabIndex = 80;
			   this->textBox_second_name_inspectors->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_second_name_inspectors_TextChanged);
			   // 
			   // import_sizeHT_inspectors
			   // 
			   this->import_sizeHT_inspectors->BackColor = System::Drawing::Color::Azure;
			   this->import_sizeHT_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->import_sizeHT_inspectors->Location = System::Drawing::Point(1289, 430);
			   this->import_sizeHT_inspectors->Name = L"import_sizeHT_inspectors";
			   this->import_sizeHT_inspectors->Size = System::Drawing::Size(122, 36);
			   this->import_sizeHT_inspectors->TabIndex = 79;
			   this->import_sizeHT_inspectors->Text = L"Ввести";
			   this->import_sizeHT_inspectors->UseVisualStyleBackColor = false;
			   this->import_sizeHT_inspectors->Click += gcnew System::EventHandler(this, &MyForm::import_sizeHT_inspectors_Click);
			   // 
			   // label19
			   // 
			   this->label19->AutoSize = true;
			   this->label19->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label19->Location = System::Drawing::Point(1149, 357);
			   this->label19->Name = L"label19";
			   this->label19->Size = System::Drawing::Size(262, 29);
			   this->label19->TabIndex = 78;
			   this->label19->Text = L"Размер хеш-таблицы:";
			   // 
			   // button6
			   // 
			   this->button6->BackColor = System::Drawing::Color::Azure;
			   this->button6->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button6->Location = System::Drawing::Point(1289, 579);
			   this->button6->Name = L"button6";
			   this->button6->Size = System::Drawing::Size(122, 36);
			   this->button6->TabIndex = 76;
			   this->button6->Text = L"Искать";
			   this->button6->UseVisualStyleBackColor = false;
			   this->button6->Click += gcnew System::EventHandler(this, &MyForm::button6_Click);
			   // 
			   // button7
			   // 
			   this->button7->BackColor = System::Drawing::Color::Azure;
			   this->button7->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button7->Location = System::Drawing::Point(1289, 529);
			   this->button7->Name = L"button7";
			   this->button7->Size = System::Drawing::Size(122, 36);
			   this->button7->TabIndex = 75;
			   this->button7->Text = L"Экспорт";
			   this->button7->UseVisualStyleBackColor = false;
			   // 
			   // import_record_inspectors_button
			   // 
			   this->import_record_inspectors_button->BackColor = System::Drawing::Color::Azure;
			   this->import_record_inspectors_button->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->import_record_inspectors_button->Location = System::Drawing::Point(1161, 529);
			   this->import_record_inspectors_button->Name = L"import_record_inspectors_button";
			   this->import_record_inspectors_button->Size = System::Drawing::Size(122, 36);
			   this->import_record_inspectors_button->TabIndex = 74;
			   this->import_record_inspectors_button->Text = L"Импорт";
			   this->import_record_inspectors_button->UseVisualStyleBackColor = false;
			   this->import_record_inspectors_button->Click += gcnew System::EventHandler(this, &MyForm::import_record_inspectors_Click);
			   // 
			   // button9
			   // 
			   this->button9->BackColor = System::Drawing::Color::Azure;
			   this->button9->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button9->Location = System::Drawing::Point(1289, 478);
			   this->button9->Name = L"button9";
			   this->button9->Size = System::Drawing::Size(122, 36);
			   this->button9->TabIndex = 73;
			   this->button9->Text = L"Удалить";
			   this->button9->UseVisualStyleBackColor = false;
			   // 
			   // add_inspectors
			   // 
			   this->add_inspectors->BackColor = System::Drawing::Color::Azure;
			   this->add_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->add_inspectors->Location = System::Drawing::Point(1161, 478);
			   this->add_inspectors->Name = L"add_inspectors";
			   this->add_inspectors->Size = System::Drawing::Size(122, 36);
			   this->add_inspectors->TabIndex = 72;
			   this->add_inspectors->Text = L"Добавить";
			   this->add_inspectors->UseVisualStyleBackColor = false;
			   this->add_inspectors->Click += gcnew System::EventHandler(this, &MyForm::add_inspectors_Click);
			   // 
			   // textBox_city_inspectors
			   // 
			   this->textBox_city_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->textBox_city_inspectors->Location = System::Drawing::Point(1127, 314);
			   this->textBox_city_inspectors->Name = L"textBox_city_inspectors";
			   this->textBox_city_inspectors->Size = System::Drawing::Size(83, 34);
			   this->textBox_city_inspectors->TabIndex = 45;
			   this->textBox_city_inspectors->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_city_inspectors_TextChanged);
			   // 
			   // label5
			   // 
			   this->label5->AutoSize = true;
			   this->label5->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label5->Location = System::Drawing::Point(1211, 282);
			   this->label5->Name = L"label5";
			   this->label5->Size = System::Drawing::Size(200, 29);
			   this->label5->TabIndex = 33;
			   this->label5->Text = L"Отделение ГАИ:";
			   // 
			   // textBox_num_inspectors
			   // 
			   this->textBox_num_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->textBox_num_inspectors->Location = System::Drawing::Point(1127, 242);
			   this->textBox_num_inspectors->Name = L"textBox_num_inspectors";
			   this->textBox_num_inspectors->Size = System::Drawing::Size(284, 34);
			   this->textBox_num_inspectors->TabIndex = 32;
			   this->textBox_num_inspectors->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_num_inspectors_TextChanged);
			   // 
			   // label4
			   // 
			   this->label4->AutoSize = true;
			   this->label4->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label4->Location = System::Drawing::Point(1135, 206);
			   this->label4->Name = L"label4";
			   this->label4->Size = System::Drawing::Size(276, 29);
			   this->label4->TabIndex = 31;
			   this->label4->Text = L"Номер удостоверения:";
			   // 
			   // textBox_titul_1
			   // 
			   this->textBox_titul_1->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox_titul_1->Location = System::Drawing::Point(1127, 169);
			   this->textBox_titul_1->Name = L"textBox_titul_1";
			   this->textBox_titul_1->Size = System::Drawing::Size(147, 34);
			   this->textBox_titul_1->TabIndex = 30;
			   this->textBox_titul_1->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_titul_1_TextChanged);
			   // 
			   // label3
			   // 
			   this->label3->AutoSize = true;
			   this->label3->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label3->Location = System::Drawing::Point(1262, 137);
			   this->label3->Name = L"label3";
			   this->label3->Size = System::Drawing::Size(149, 29);
			   this->label3->TabIndex = 29;
			   this->label3->Text = L"Должность:";
			   // 
			   // textBox_name_inspectors
			   // 
			   this->textBox_name_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->textBox_name_inspectors->Location = System::Drawing::Point(1127, 95);
			   this->textBox_name_inspectors->Name = L"textBox_name_inspectors";
			   this->textBox_name_inspectors->Size = System::Drawing::Size(83, 34);
			   this->textBox_name_inspectors->TabIndex = 28;
			   this->textBox_name_inspectors->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox_name_inspectors_TextChanged);
			   // 
			   // label2
			   // 
			   this->label2->AutoSize = true;
			   this->label2->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label2->Location = System::Drawing::Point(1331, 63);
			   this->label2->Name = L"label2";
			   this->label2->Size = System::Drawing::Size(80, 29);
			   this->label2->TabIndex = 27;
			   this->label2->Text = L"ФИО:";
			   // 
			   // label1
			   // 
			   this->label1->AutoSize = true;
			   this->label1->BackColor = System::Drawing::SystemColors::Window;
			   this->label1->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 12, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label1->Location = System::Drawing::Point(1135, 18);
			   this->label1->Name = L"label1";
			   this->label1->Size = System::Drawing::Size(255, 25);
			   this->label1->TabIndex = 26;
			   this->label1->Text = L"Справочник \"Инспекторы\"";
			   // 
			   // inspectors_rez
			   // 
			   this->inspectors_rez->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->inspectors_rez->Location = System::Drawing::Point(9, 428);
			   this->inspectors_rez->Name = L"inspectors_rez";
			   this->inspectors_rez->Size = System::Drawing::Size(1101, 185);
			   this->inspectors_rez->TabIndex = 25;
			   this->inspectors_rez->Text = L"";
			   // 
			   // Text_inspectors
			   // 
			   this->Text_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->Text_inspectors->Location = System::Drawing::Point(9, 15);
			   this->Text_inspectors->Name = L"Text_inspectors";
			   this->Text_inspectors->Size = System::Drawing::Size(1101, 407);
			   this->Text_inspectors->TabIndex = 24;
			   this->Text_inspectors->Text = L"";
			   // 
			   // inspectors_sizeHT
			   // 
			   this->inspectors_sizeHT->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->inspectors_sizeHT->Location = System::Drawing::Point(1127, 389);
			   this->inspectors_sizeHT->Name = L"inspectors_sizeHT";
			   this->inspectors_sizeHT->Size = System::Drawing::Size(284, 34);
			   this->inspectors_sizeHT->TabIndex = 77;
			   this->inspectors_sizeHT->TextChanged += gcnew System::EventHandler(this, &MyForm::textBox19_inspectors_sizeHT_TextChanged);
			   // 
			   // Candidates
			   // 
			   this->Candidates->AutoScroll = true;
			   this->Candidates->BackColor = System::Drawing::Color::LightSteelBlue;
			   this->Candidates->Controls->Add(this->import_sizeHT_candidates);
			   this->Candidates->Controls->Add(this->label18);
			   this->Candidates->Controls->Add(this->candidates_sizeHT);
			   this->Candidates->Controls->Add(this->textBox5);
			   this->Candidates->Controls->Add(this->textBox10);
			   this->Candidates->Controls->Add(this->textBox9);
			   this->Candidates->Controls->Add(this->button1);
			   this->Candidates->Controls->Add(this->button2);
			   this->Candidates->Controls->Add(this->button3);
			   this->Candidates->Controls->Add(this->button4);
			   this->Candidates->Controls->Add(this->button10);
			   this->Candidates->Controls->Add(this->label6);
			   this->Candidates->Controls->Add(this->textBox6);
			   this->Candidates->Controls->Add(this->label7);
			   this->Candidates->Controls->Add(this->textBox7);
			   this->Candidates->Controls->Add(this->label8);
			   this->Candidates->Controls->Add(this->textBox8);
			   this->Candidates->Controls->Add(this->label9);
			   this->Candidates->Controls->Add(this->label10);
			   this->Candidates->Controls->Add(this->richTextBox1);
			   this->Candidates->Controls->Add(this->richTextBox2);
			   this->Candidates->Location = System::Drawing::Point(4, 25);
			   this->Candidates->Name = L"Candidates";
			   this->Candidates->Padding = System::Windows::Forms::Padding(3);
			   this->Candidates->Size = System::Drawing::Size(1447, 621);
			   this->Candidates->TabIndex = 1;
			   this->Candidates->Text = L"Кандидаты";
			   // 
			   // import_sizeHT_candidates
			   // 
			   this->import_sizeHT_candidates->BackColor = System::Drawing::Color::Azure;
			   this->import_sizeHT_candidates->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->import_sizeHT_candidates->Location = System::Drawing::Point(1293, 427);
			   this->import_sizeHT_candidates->Name = L"import_sizeHT_candidates";
			   this->import_sizeHT_candidates->Size = System::Drawing::Size(122, 36);
			   this->import_sizeHT_candidates->TabIndex = 71;
			   this->import_sizeHT_candidates->Text = L"Ввести";
			   this->import_sizeHT_candidates->UseVisualStyleBackColor = false;
			   this->import_sizeHT_candidates->Click += gcnew System::EventHandler(this, &MyForm::import_sizeHT_candidates_Click);
			   // 
			   // label18
			   // 
			   this->label18->AutoSize = true;
			   this->label18->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label18->Location = System::Drawing::Point(1152, 350);
			   this->label18->Name = L"label18";
			   this->label18->Size = System::Drawing::Size(262, 29);
			   this->label18->TabIndex = 70;
			   this->label18->Text = L"Размер хеш-таблицы:";
			   // 
			   // candidates_sizeHT
			   // 
			   this->candidates_sizeHT->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->candidates_sizeHT->Location = System::Drawing::Point(1123, 382);
			   this->candidates_sizeHT->Name = L"candidates_sizeHT";
			   this->candidates_sizeHT->Size = System::Drawing::Size(292, 34);
			   this->candidates_sizeHT->TabIndex = 69;
			   \
			   this->candidates_sizeHT->TextChanged += gcnew System::EventHandler(this, &MyForm::candidates_sizeHT_TextChanged);
			   // 
			   // textBox5
			   // 
			   this->textBox5->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox5->Location = System::Drawing::Point(1123, 308);
			   this->textBox5->Name = L"textBox5";
			   this->textBox5->Size = System::Drawing::Size(80, 34);
			   this->textBox5->TabIndex = 68;
			   // 
			   // textBox10
			   // 
			   this->textBox10->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox10->Location = System::Drawing::Point(1305, 308);
			   this->textBox10->Name = L"textBox10";
			   this->textBox10->Size = System::Drawing::Size(109, 34);
			   this->textBox10->TabIndex = 67;
			   // 
			   // textBox9
			   // 
			   this->textBox9->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox9->Location = System::Drawing::Point(1214, 308);
			   this->textBox9->Name = L"textBox9";
			   this->textBox9->Size = System::Drawing::Size(80, 34);
			   this->textBox9->TabIndex = 66;
			   // 
			   // button1
			   // 
			   this->button1->BackColor = System::Drawing::Color::Azure;
			   this->button1->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button1->Location = System::Drawing::Point(1292, 576);
			   this->button1->Name = L"button1";
			   this->button1->Size = System::Drawing::Size(122, 36);
			   this->button1->TabIndex = 65;
			   this->button1->Text = L"Искать";
			   this->button1->UseVisualStyleBackColor = false;
			   // 
			   // button2
			   // 
			   this->button2->BackColor = System::Drawing::Color::Azure;
			   this->button2->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button2->Location = System::Drawing::Point(1293, 525);
			   this->button2->Name = L"button2";
			   this->button2->Size = System::Drawing::Size(122, 36);
			   this->button2->TabIndex = 64;
			   this->button2->Text = L"Экспорт";
			   this->button2->UseVisualStyleBackColor = false;
			   // 
			   // button3
			   // 
			   this->button3->BackColor = System::Drawing::Color::Azure;
			   this->button3->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button3->Location = System::Drawing::Point(1164, 525);
			   this->button3->Name = L"button3";
			   this->button3->Size = System::Drawing::Size(122, 36);
			   this->button3->TabIndex = 63;
			   this->button3->Text = L"Импорт";
			   this->button3->UseVisualStyleBackColor = false;
			   // 
			   // button4
			   // 
			   this->button4->BackColor = System::Drawing::Color::Azure;
			   this->button4->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button4->Location = System::Drawing::Point(1292, 474);
			   this->button4->Name = L"button4";
			   this->button4->Size = System::Drawing::Size(122, 36);
			   this->button4->TabIndex = 62;
			   this->button4->Text = L"Удалить";
			   this->button4->UseVisualStyleBackColor = false;
			   // 
			   // button10
			   // 
			   this->button10->BackColor = System::Drawing::Color::Azure;
			   this->button10->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button10->Location = System::Drawing::Point(1164, 474);
			   this->button10->Name = L"button10";
			   this->button10->Size = System::Drawing::Size(122, 36);
			   this->button10->TabIndex = 61;
			   this->button10->Text = L"Добавить";
			   this->button10->UseVisualStyleBackColor = false;
			   // 
			   // label6
			   // 
			   this->label6->AutoSize = true;
			   this->label6->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label6->Location = System::Drawing::Point(1216, 276);
			   this->label6->Name = L"label6";
			   this->label6->Size = System::Drawing::Size(199, 29);
			   this->label6->TabIndex = 55;
			   this->label6->Text = L"Дата рождения:";
			   // 
			   // textBox6
			   // 
			   this->textBox6->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox6->Location = System::Drawing::Point(1123, 236);
			   this->textBox6->Name = L"textBox6";
			   this->textBox6->Size = System::Drawing::Size(292, 34);
			   this->textBox6->TabIndex = 54;
			   // 
			   // label7
			   // 
			   this->label7->AutoSize = true;
			   this->label7->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label7->Location = System::Drawing::Point(1179, 204);
			   this->label7->Name = L"label7";
			   this->label7->Size = System::Drawing::Size(235, 29);
			   this->label7->TabIndex = 53;
			   this->label7->Text = L"Адрес проживания:";
			   // 
			   // textBox7
			   // 
			   this->textBox7->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox7->Location = System::Drawing::Point(1123, 163);
			   this->textBox7->Name = L"textBox7";
			   this->textBox7->Size = System::Drawing::Size(292, 34);
			   this->textBox7->TabIndex = 52;
			   // 
			   // label8
			   // 
			   this->label8->AutoSize = true;
			   this->label8->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label8->Location = System::Drawing::Point(1300, 131);
			   this->label8->Name = L"label8";
			   this->label8->Size = System::Drawing::Size(114, 29);
			   this->label8->TabIndex = 51;
			   this->label8->Text = L"Паспорт:";
			   // 
			   // textBox8
			   // 
			   this->textBox8->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox8->Location = System::Drawing::Point(1123, 89);
			   this->textBox8->Name = L"textBox8";
			   this->textBox8->Size = System::Drawing::Size(292, 34);
			   this->textBox8->TabIndex = 50;
			   // 
			   // label9
			   // 
			   this->label9->AutoSize = true;
			   this->label9->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label9->Location = System::Drawing::Point(1335, 57);
			   this->label9->Name = L"label9";
			   this->label9->Size = System::Drawing::Size(80, 29);
			   this->label9->TabIndex = 49;
			   this->label9->Text = L"ФИО:";
			   // 
			   // label10
			   // 
			   this->label10->AutoSize = true;
			   this->label10->BackColor = System::Drawing::SystemColors::Window;
			   this->label10->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 12, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label10->Location = System::Drawing::Point(1136, 16);
			   this->label10->Name = L"label10";
			   this->label10->Size = System::Drawing::Size(244, 25);
			   this->label10->TabIndex = 48;
			   this->label10->Text = L"Справочник \"Кандидаты\"";
			   // 
			   // richTextBox1
			   // 
			   this->richTextBox1->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->richTextBox1->Location = System::Drawing::Point(15, 429);
			   this->richTextBox1->Name = L"richTextBox1";
			   this->richTextBox1->Size = System::Drawing::Size(1087, 183);
			   this->richTextBox1->TabIndex = 47;
			   this->richTextBox1->Text = L"";
			   // 
			   // richTextBox2
			   // 
			   this->richTextBox2->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->richTextBox2->Location = System::Drawing::Point(15, 16);
			   this->richTextBox2->Name = L"richTextBox2";
			   this->richTextBox2->Size = System::Drawing::Size(1087, 407);
			   this->richTextBox2->TabIndex = 46;
			   this->richTextBox2->Text = L"";
			   // 
			   // Rezult
			   // 
			   this->Rezult->AutoScroll = true;
			   this->Rezult->BackColor = System::Drawing::Color::LightSteelBlue;
			   this->Rezult->Controls->Add(this->label17);
			   this->Rezult->Controls->Add(this->label16);
			   this->Rezult->Controls->Add(this->textBox16);
			   this->Rezult->Controls->Add(this->textBox17);
			   this->Rezult->Controls->Add(this->textBox18);
			   this->Rezult->Controls->Add(this->textBox11);
			   this->Rezult->Controls->Add(this->textBox13);
			   this->Rezult->Controls->Add(this->button11);
			   this->Rezult->Controls->Add(this->button12);
			   this->Rezult->Controls->Add(this->button13);
			   this->Rezult->Controls->Add(this->button14);
			   this->Rezult->Controls->Add(this->button15);
			   this->Rezult->Controls->Add(this->label11);
			   this->Rezult->Controls->Add(this->textBox14);
			   this->Rezult->Controls->Add(this->label12);
			   this->Rezult->Controls->Add(this->textBox15);
			   this->Rezult->Controls->Add(this->label13);
			   this->Rezult->Controls->Add(this->label14);
			   this->Rezult->Controls->Add(this->label15);
			   this->Rezult->Controls->Add(this->richTextBox3);
			   this->Rezult->Controls->Add(this->richTextBox4);
			   this->Rezult->Location = System::Drawing::Point(4, 25);
			   this->Rezult->Name = L"Rezult";
			   this->Rezult->Size = System::Drawing::Size(1447, 621);
			   this->Rezult->TabIndex = 2;
			   this->Rezult->Text = L"Результаты";
			   // 
			   // label17
			   // 
			   this->label17->AutoSize = true;
			   this->label17->Location = System::Drawing::Point(1343, 362);
			   this->label17->Name = L"label17";
			   this->label17->Size = System::Drawing::Size(64, 16);
			   this->label17->TabIndex = 91;
			   this->label17->Text = L"Секунды";
			   // 
			   // label16
			   // 
			   this->label16->AutoSize = true;
			   this->label16->Location = System::Drawing::Point(1256, 362);
			   this->label16->Name = L"label16";
			   this->label16->Size = System::Drawing::Size(58, 16);
			   this->label16->TabIndex = 90;
			   this->label16->Text = L"Минуты";
			   // 
			   // textBox16
			   // 
			   this->textBox16->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox16->Location = System::Drawing::Point(1123, 105);
			   this->textBox16->Name = L"textBox16";
			   this->textBox16->Size = System::Drawing::Size(80, 34);
			   this->textBox16->TabIndex = 89;
			   // 
			   // textBox17
			   // 
			   this->textBox17->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox17->Location = System::Drawing::Point(1305, 105);
			   this->textBox17->Name = L"textBox17";
			   this->textBox17->Size = System::Drawing::Size(109, 34);
			   this->textBox17->TabIndex = 88;
			   // 
			   // textBox18
			   // 
			   this->textBox18->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox18->Location = System::Drawing::Point(1214, 105);
			   this->textBox18->Name = L"textBox18";
			   this->textBox18->Size = System::Drawing::Size(80, 34);
			   this->textBox18->TabIndex = 87;
			   // 
			   // textBox11
			   // 
			   this->textBox11->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox11->Location = System::Drawing::Point(1243, 325);
			   this->textBox11->Name = L"textBox11";
			   this->textBox11->Size = System::Drawing::Size(80, 34);
			   this->textBox11->TabIndex = 86;
			   // 
			   // textBox13
			   // 
			   this->textBox13->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox13->Location = System::Drawing::Point(1334, 325);
			   this->textBox13->Name = L"textBox13";
			   this->textBox13->Size = System::Drawing::Size(80, 34);
			   this->textBox13->TabIndex = 84;
			   // 
			   // button11
			   // 
			   this->button11->BackColor = System::Drawing::Color::Azure;
			   this->button11->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button11->Location = System::Drawing::Point(1204, 514);
			   this->button11->Name = L"button11";
			   this->button11->Size = System::Drawing::Size(122, 36);
			   this->button11->TabIndex = 83;
			   this->button11->Text = L"Искать";
			   this->button11->UseVisualStyleBackColor = false;
			   // 
			   // button12
			   // 
			   this->button12->BackColor = System::Drawing::Color::Azure;
			   this->button12->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button12->Location = System::Drawing::Point(1270, 463);
			   this->button12->Name = L"button12";
			   this->button12->Size = System::Drawing::Size(122, 36);
			   this->button12->TabIndex = 82;
			   this->button12->Text = L"Экспорт";
			   this->button12->UseVisualStyleBackColor = false;
			   // 
			   // button13
			   // 
			   this->button13->BackColor = System::Drawing::Color::Azure;
			   this->button13->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button13->Location = System::Drawing::Point(1137, 463);
			   this->button13->Name = L"button13";
			   this->button13->Size = System::Drawing::Size(122, 36);
			   this->button13->TabIndex = 81;
			   this->button13->Text = L"Импорт";
			   this->button13->UseVisualStyleBackColor = false;
			   // 
			   // button14
			   // 
			   this->button14->BackColor = System::Drawing::Color::Azure;
			   this->button14->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button14->Location = System::Drawing::Point(1270, 412);
			   this->button14->Name = L"button14";
			   this->button14->Size = System::Drawing::Size(122, 36);
			   this->button14->TabIndex = 80;
			   this->button14->Text = L"Удалить";
			   this->button14->UseVisualStyleBackColor = false;
			   // 
			   // button15
			   // 
			   this->button15->BackColor = System::Drawing::Color::Azure;
			   this->button15->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button15->Location = System::Drawing::Point(1137, 412);
			   this->button15->Name = L"button15";
			   this->button15->Size = System::Drawing::Size(122, 36);
			   this->button15->TabIndex = 79;
			   this->button15->Text = L"Добавить";
			   this->button15->UseVisualStyleBackColor = false;
			   // 
			   // label11
			   // 
			   this->label11->AutoSize = true;
			   this->label11->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label11->Location = System::Drawing::Point(1234, 293);
			   this->label11->Name = L"label11";
			   this->label11->Size = System::Drawing::Size(180, 29);
			   this->label11->TabIndex = 78;
			   this->label11->Text = L"Длительность:";
			   // 
			   // textBox14
			   // 
			   this->textBox14->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox14->Location = System::Drawing::Point(1122, 252);
			   this->textBox14->Name = L"textBox14";
			   this->textBox14->Size = System::Drawing::Size(292, 34);
			   this->textBox14->TabIndex = 77;
			   // 
			   // label12
			   // 
			   this->label12->AutoSize = true;
			   this->label12->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label12->Location = System::Drawing::Point(1138, 220);
			   this->label12->Name = L"label12";
			   this->label12->Size = System::Drawing::Size(276, 29);
			   this->label12->TabIndex = 76;
			   this->label12->Text = L"Номер удостоверения:";
			   // 
			   // textBox15
			   // 
			   this->textBox15->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->textBox15->Location = System::Drawing::Point(1122, 179);
			   this->textBox15->Name = L"textBox15";
			   this->textBox15->Size = System::Drawing::Size(292, 34);
			   this->textBox15->TabIndex = 75;
			   // 
			   // label13
			   // 
			   this->label13->AutoSize = true;
			   this->label13->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label13->Location = System::Drawing::Point(1300, 147);
			   this->label13->Name = L"label13";
			   this->label13->Size = System::Drawing::Size(114, 29);
			   this->label13->TabIndex = 74;
			   this->label13->Text = L"Паспорт:";
			   // 
			   // label14
			   // 
			   this->label14->AutoSize = true;
			   this->label14->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label14->Location = System::Drawing::Point(1221, 73);
			   this->label14->Name = L"label14";
			   this->label14->Size = System::Drawing::Size(193, 29);
			   this->label14->TabIndex = 72;
			   this->label14->Text = L"Дата экзамена:";
			   // 
			   // label15
			   // 
			   this->label15->AutoSize = true;
			   this->label15->BackColor = System::Drawing::SystemColors::Window;
			   this->label15->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 12, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label15->Location = System::Drawing::Point(1138, 25);
			   this->label15->Name = L"label15";
			   this->label15->Size = System::Drawing::Size(253, 25);
			   this->label15->TabIndex = 71;
			   this->label15->Text = L"Справочник \"Результаты\"";
			   // 
			   // richTextBox3
			   // 
			   this->richTextBox3->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->richTextBox3->Location = System::Drawing::Point(15, 429);
			   this->richTextBox3->Name = L"richTextBox3";
			   this->richTextBox3->Size = System::Drawing::Size(1083, 179);
			   this->richTextBox3->TabIndex = 70;
			   this->richTextBox3->Text = L"";
			   // 
			   // richTextBox4
			   // 
			   this->richTextBox4->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->richTextBox4->Location = System::Drawing::Point(15, 16);
			   this->richTextBox4->Name = L"richTextBox4";
			   this->richTextBox4->Size = System::Drawing::Size(1083, 407);
			   this->richTextBox4->TabIndex = 69;
			   this->richTextBox4->Text = L"";
			   // 
			   // Otladka
			   // 
			   this->Otladka->AutoScroll = true;
			   this->Otladka->BackColor = System::Drawing::Color::LightSteelBlue;
			   this->Otladka->Controls->Add(this->richTextBox_otladka);
			   this->Otladka->Controls->Add(this->label24);
			   this->Otladka->Controls->Add(this->button18);
			   this->Otladka->Controls->Add(this->button19);
			   this->Otladka->Controls->Add(this->button20);
			   this->Otladka->Controls->Add(this->button21);
			   this->Otladka->Controls->Add(this->button22);
			   this->Otladka->Controls->Add(this->label20);
			   this->Otladka->Controls->Add(this->button23);
			   this->Otladka->Controls->Add(this->button25);
			   this->Otladka->Controls->Add(this->button26);
			   this->Otladka->Controls->Add(this->hashtable_num_inspectors);
			   this->Otladka->Controls->Add(this->label21);
			   this->Otladka->Controls->Add(this->button28);
			   this->Otladka->Controls->Add(this->button29);
			   this->Otladka->Controls->Add(this->button31);
			   this->Otladka->Controls->Add(this->button32);
			   this->Otladka->Controls->Add(this->label22);
			   this->Otladka->Controls->Add(this->label23);
			   this->Otladka->Location = System::Drawing::Point(4, 25);
			   this->Otladka->Name = L"Otladka";
			   this->Otladka->Size = System::Drawing::Size(1447, 621);
			   this->Otladka->TabIndex = 3;
			   this->Otladka->Text = L"Окно отладки";
			   // 
			   // richTextBox_otladka
			   // 
			   this->richTextBox_otladka->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.8F, System::Drawing::FontStyle::Regular,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->richTextBox_otladka->Location = System::Drawing::Point(9, 46);
			   this->richTextBox_otladka->Name = L"richTextBox_otladka";
			   this->richTextBox_otladka->Size = System::Drawing::Size(1114, 551);
			   this->richTextBox_otladka->TabIndex = 63;
			   this->richTextBox_otladka->Text = L"";
			   // 
			   // label24
			   // 
			   this->label24->AutoSize = true;
			   this->label24->BackColor = System::Drawing::SystemColors::Window;
			   this->label24->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 12, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label24->Location = System::Drawing::Point(9, 18);
			   this->label24->Name = L"label24";
			   this->label24->Size = System::Drawing::Size(142, 25);
			   this->label24->TabIndex = 62;
			   this->label24->Text = L"Окно отладки";
			   // 
			   // button18
			   // 
			   this->button18->BackColor = System::Drawing::Color::Azure;
			   this->button18->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button18->Location = System::Drawing::Point(1142, 547);
			   this->button18->Name = L"button18";
			   this->button18->Size = System::Drawing::Size(272, 27);
			   this->button18->TabIndex = 61;
			   this->button18->Text = L"Дерево по длительности экзамена";
			   this->button18->UseVisualStyleBackColor = false;
			   // 
			   // button19
			   // 
			   this->button19->BackColor = System::Drawing::Color::Azure;
			   this->button19->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button19->Location = System::Drawing::Point(1142, 514);
			   this->button19->Name = L"button19";
			   this->button19->Size = System::Drawing::Size(272, 27);
			   this->button19->TabIndex = 60;
			   this->button19->Text = L"Дерево по номеру удостоверения";
			   this->button19->UseVisualStyleBackColor = false;
			   // 
			   // button20
			   // 
			   this->button20->BackColor = System::Drawing::Color::Azure;
			   this->button20->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button20->Location = System::Drawing::Point(1142, 481);
			   this->button20->Name = L"button20";
			   this->button20->Size = System::Drawing::Size(272, 27);
			   this->button20->TabIndex = 59;
			   this->button20->Text = L"Дерево по номеру паспорта";
			   this->button20->UseVisualStyleBackColor = false;
			   // 
			   // button21
			   // 
			   this->button21->BackColor = System::Drawing::Color::Azure;
			   this->button21->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button21->Location = System::Drawing::Point(1142, 448);
			   this->button21->Name = L"button21";
			   this->button21->Size = System::Drawing::Size(272, 27);
			   this->button21->TabIndex = 58;
			   this->button21->Text = L"Дерево по дате сдачи";
			   this->button21->UseVisualStyleBackColor = false;
			   // 
			   // button22
			   // 
			   this->button22->BackColor = System::Drawing::Color::Azure;
			   this->button22->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button22->Location = System::Drawing::Point(1142, 398);
			   this->button22->Name = L"button22";
			   this->button22->Size = System::Drawing::Size(272, 44);
			   this->button22->TabIndex = 57;
			   this->button22->Text = L"Хеш-таблица по дате сдачи и паспорту";
			   this->button22->UseVisualStyleBackColor = false;
			   // 
			   // label20
			   // 
			   this->label20->AutoSize = true;
			   this->label20->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.2F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label20->Location = System::Drawing::Point(1295, 375);
			   this->label20->Name = L"label20";
			   this->label20->Size = System::Drawing::Size(119, 20);
			   this->label20->TabIndex = 56;
			   this->label20->Text = L"Результаты";
			   // 
			   // button23
			   // 
			   this->button23->BackColor = System::Drawing::Color::Azure;
			   this->button23->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button23->Location = System::Drawing::Point(1142, 342);
			   this->button23->Name = L"button23";
			   this->button23->Size = System::Drawing::Size(272, 27);
			   this->button23->TabIndex = 55;
			   this->button23->Text = L"Дерево по отделению ГАИ";
			   this->button23->UseVisualStyleBackColor = false;
			   // 
			   // button25
			   // 
			   this->button25->BackColor = System::Drawing::Color::Azure;
			   this->button25->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button25->Location = System::Drawing::Point(1142, 309);
			   this->button25->Name = L"button25";
			   this->button25->Size = System::Drawing::Size(272, 27);
			   this->button25->TabIndex = 53;
			   this->button25->Text = L"Дерево по должности";
			   this->button25->UseVisualStyleBackColor = false;
			   // 
			   // button26
			   // 
			   this->button26->BackColor = System::Drawing::Color::Azure;
			   this->button26->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button26->Location = System::Drawing::Point(1142, 276);
			   this->button26->Name = L"button26";
			   this->button26->Size = System::Drawing::Size(272, 27);
			   this->button26->TabIndex = 52;
			   this->button26->Text = L"Дерево по ФИО";
			   this->button26->UseVisualStyleBackColor = false;
			   // 
			   // hashtable_num_inspectors
			   // 
			   this->hashtable_num_inspectors->BackColor = System::Drawing::Color::Azure;
			   this->hashtable_num_inspectors->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold,
				   System::Drawing::GraphicsUnit::Point, static_cast<System::Byte>(204)));
			   this->hashtable_num_inspectors->Location = System::Drawing::Point(1142, 225);
			   this->hashtable_num_inspectors->Name = L"hashtable_num_inspectors";
			   this->hashtable_num_inspectors->Size = System::Drawing::Size(272, 45);
			   this->hashtable_num_inspectors->TabIndex = 51;
			   this->hashtable_num_inspectors->Text = L"Хеш-таблица по номеру удостоверения";
			   this->hashtable_num_inspectors->UseVisualStyleBackColor = false;
			   this->hashtable_num_inspectors->Click += gcnew System::EventHandler(this, &MyForm::hashtable_num_inspectors_Click);
			   // 
			   // label21
			   // 
			   this->label21->AutoSize = true;
			   this->label21->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.2F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label21->Location = System::Drawing::Point(1294, 203);
			   this->label21->Name = L"label21";
			   this->label21->Size = System::Drawing::Size(120, 20);
			   this->label21->TabIndex = 50;
			   this->label21->Text = L"Инспекторы";
			   // 
			   // button28
			   // 
			   this->button28->BackColor = System::Drawing::Color::Azure;
			   this->button28->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button28->Location = System::Drawing::Point(1142, 170);
			   this->button28->Name = L"button28";
			   this->button28->Size = System::Drawing::Size(272, 27);
			   this->button28->TabIndex = 49;
			   this->button28->Text = L"Дерево по дате рождения";
			   this->button28->UseVisualStyleBackColor = false;
			   // 
			   // button29
			   // 
			   this->button29->BackColor = System::Drawing::Color::Azure;
			   this->button29->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button29->Location = System::Drawing::Point(1142, 137);
			   this->button29->Name = L"button29";
			   this->button29->Size = System::Drawing::Size(272, 27);
			   this->button29->TabIndex = 48;
			   this->button29->Text = L"Дерево по адресу";
			   this->button29->UseVisualStyleBackColor = false;
			   // 
			   // button31
			   // 
			   this->button31->BackColor = System::Drawing::Color::Azure;
			   this->button31->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button31->Location = System::Drawing::Point(1142, 104);
			   this->button31->Name = L"button31";
			   this->button31->Size = System::Drawing::Size(272, 27);
			   this->button31->TabIndex = 46;
			   this->button31->Text = L"Дерево по ФИО";
			   this->button31->UseVisualStyleBackColor = false;
			   // 
			   // button32
			   // 
			   this->button32->BackColor = System::Drawing::Color::Azure;
			   this->button32->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 7.8F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->button32->Location = System::Drawing::Point(1142, 71);
			   this->button32->Name = L"button32";
			   this->button32->Size = System::Drawing::Size(272, 27);
			   this->button32->TabIndex = 45;
			   this->button32->Text = L"Хеш-таблица по паспорту";
			   this->button32->UseVisualStyleBackColor = false;
			   // 
			   // label22
			   // 
			   this->label22->AutoSize = true;
			   this->label22->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 10.2F, System::Drawing::FontStyle::Bold, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label22->Location = System::Drawing::Point(1299, 48);
			   this->label22->Name = L"label22";
			   this->label22->Size = System::Drawing::Size(115, 20);
			   this->label22->TabIndex = 44;
			   this->label22->Text = L"Кандидаты";
			   // 
			   // label23
			   // 
			   this->label23->AutoSize = true;
			   this->label23->BackColor = System::Drawing::SystemColors::Window;
			   this->label23->Font = (gcnew System::Drawing::Font(L"Microsoft Sans Serif", 13.8F, System::Drawing::FontStyle::Regular, System::Drawing::GraphicsUnit::Point,
				   static_cast<System::Byte>(204)));
			   this->label23->Location = System::Drawing::Point(16, -53);
			   this->label23->Name = L"label23";
			   this->label23->Size = System::Drawing::Size(169, 29);
			   this->label23->TabIndex = 43;
			   this->label23->Text = L"Окно отладки";
			   // 
			   // MyForm
			   // 
			   this->AutoScaleDimensions = System::Drawing::SizeF(8, 16);
			   this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			   this->BackColor = System::Drawing::Color::LightSteelBlue;
			   this->ClientSize = System::Drawing::Size(1466, 662);
			   this->Controls->Add(this->tabControl);
			   this->Icon = (cli::safe_cast<System::Drawing::Icon^>(resources->GetObject(L"$this.Icon")));
			   this->Name = L"MyForm";
			   this->Text = L"MyForm";
			   this->tabControl->ResumeLayout(false);
			   this->Inspectors->ResumeLayout(false);
			   this->Inspectors->PerformLayout();
			   this->Candidates->ResumeLayout(false);
			   this->Candidates->PerformLayout();
			   this->Rezult->ResumeLayout(false);
			   this->Rezult->PerformLayout();
			   this->Otladka->ResumeLayout(false);
			   this->Otladka->PerformLayout();
			   this->ResumeLayout(false);

		   }
#pragma endregion
		   // импорт из файла
	private: System::Void import_record_inspectors_Click(System::Object^ sender, System::EventArgs^ e) {
		if (sizeHT != -2)
		{
			if (sizeHT_first_inspectors == false)
			{
				inspectors_sizeHT->Text = candidates_sizeHT->Text;
			}
			Text_inspectors->Clear();
			auto reader = System::IO::File::OpenText("Inspectors.txt");
		
			//TreeAdress = new tree<Adress>();
			//TreeFIO = new tree<FIO>();
			//TreeDB = new tree<DB>();*/

			import_inspectors = true;
			int size = 0;
			bool trouble = false;
			while ((!reader->EndOfStream) && (trouble == false)) {
				auto str = reader->ReadLine();
				auto _list = str->Split(' ');

				msclr::interop::marshal_context context;
				list* el = new list();
				if ((System::Text::RegularExpressions::Regex::IsMatch(_list[0], "[^а-яА-Я]+")) ||
					(System::Text::RegularExpressions::Regex::IsMatch(_list[1], "[^а-яА-Я]+")) ||
					(System::Text::RegularExpressions::Regex::IsMatch(_list[2], "[^а-яА-Я]+")) ||
					(System::Text::RegularExpressions::Regex::IsMatch(_list[3], "[^а-яА-Я]+")) ||
					(System::Text::RegularExpressions::Regex::IsMatch(_list[4], "[^а-яА-Я]+")) ||
					(System::Text::RegularExpressions::Regex::IsMatch(_list[5], "[^0-9]")) ||
					(System::Text::RegularExpressions::Regex::IsMatch(_list[6], "[^а-яА-Я]+")) ||
					(System::Text::RegularExpressions::Regex::IsMatch(_list[7], "[^а-яА-Я]+")) ||
					(System::Text::RegularExpressions::Regex::IsMatch(_list[8], "[^0-9]")) ||
					((atoi(context.marshal_as<std::string>(_list[5]).c_str())) < 100000000) ||
					((atoi(context.marshal_as<std::string>(_list[5]).c_str())) > 999999999) ||
					((atoi(context.marshal_as<std::string>(_list[8]).c_str())) < 1) ||
					((atoi(context.marshal_as<std::string>(_list[8]).c_str())) > 1000)
					)
				{
					MessageBox::Show("Ошибка, проверьте корректность данных в исходном файле в строке " + (size + 1));
					trouble = true;
				}
				else {

					Text_inspectors->AppendText(str);

					_list[0] += " " + _list[1] + " " + _list[2];
					_list[3] += " " + _list[4];
					_list[6] += " " + _list[7] + " " + _list[8];
					el->name = context.marshal_as<std::string>(_list[0]);
					el->title = context.marshal_as<std::string>(_list[3]);
					el->num = atoi(context.marshal_as<std::string>(_list[5]).c_str());
					el->traffic_police = context.marshal_as<std::string>(_list[6]);
					el->index = size;
					int search = -2;
					search = Hashtable_inspectors->Search_I(*el);
					
					if (search > 1) 
					{
						Text_inspectors->Clear();
						trouble = true;
						MessageBox::Show( "Проверьте файл на корректность данных. Имеются повторения" );
					}
					else
					{

						//TreeAdress->insert(el->address.address, size);
						//TreeDB->insert(db, size);
						//TreeFIO->insert(FIO(el->fio.surname, el->fio.name, el->fio.f_name), size);
						Hashtable_inspectors->Add_I(*el);
						Record_inspectors.push_back(el);

						Text_inspectors->AppendText("\n");
						++size;
					}
				}
			}
			reader->Close();
		}
		else 
		{
			MessageBox::Show("Ошибка, введите размер хеш-таблицы.");
		}
	}
	private: System::Void textBox19_inspectors_sizeHT_TextChanged(System::Object^ sender, System::EventArgs^ e) {
		if (inspectors_sizeHT->Text != "")
		{
			if ((System::Text::RegularExpressions::Regex::IsMatch(inspectors_sizeHT->Text, "[^0-9]")) || (inspectors_sizeHT->Text == "0"))
			{
				MessageBox::Show("Ошибка, введите число больше нуля.");
				inspectors_sizeHT->Clear();
			}
		}
	}
	private: System::Void candidates_sizeHT_TextChanged(System::Object^ sender, System::EventArgs^ e) {
		if (candidates_sizeHT->Text != "")
		{
			if ((System::Text::RegularExpressions::Regex::IsMatch(candidates_sizeHT->Text, "[^0-9]")) || (candidates_sizeHT->Text == "0"))
			{
				MessageBox::Show("Ошибка, введите число больше нуля.");
				candidates_sizeHT->Clear();
			}
		}
	}
private: System::Void import_sizeHT_inspectors_Click(System::Object^ sender, System::EventArgs^ e) {
	if (sizeHT == -2)
	{
		if (inspectors_sizeHT->Text != "")
		{
			sizeHT = Convert::ToInt16(inspectors_sizeHT->Text);
			candidates_sizeHT->Text = inspectors_sizeHT->Text;
			auto _Hashtable_inspectors = new HTable(sizeHT);
			//
			//
			Hashtable_inspectors = _Hashtable_inspectors;
			MessageBox::Show("Размер хеш-таблицы введён.");
			sizeHT_first_inspectors = true;
		}
		else MessageBox::Show("Ошибка, поле пустое, введите размер хеш-таблицы.");
	}
	else if (sizeHT_first_inspectors == true)
	{
		MessageBox::Show("Размер хеш-таблицы уже введён, перезапустите программу, чтобы его поменять.");
		inspectors_sizeHT->Clear();
		inspectors_sizeHT->Text = candidates_sizeHT->Text;
	}
	else
	{
		MessageBox::Show("Размер хеш-таблицы введён из справочника кандидаты.");
		inspectors_sizeHT->Clear();
		inspectors_sizeHT->Text = candidates_sizeHT->Text;
	}
}
private: System::Void import_sizeHT_candidates_Click(System::Object^ sender, System::EventArgs^ e) {
	if (sizeHT == -2)
	{
		sizeHT = Convert::ToInt16(candidates_sizeHT->Text);

		/*auto records = Record_inspectors;
		auto Hashtable_inspectors = new HTable(sizeHT);
		int j = 0;
		for (auto i : records) {
			Hashtable_inspectors->Add_I(list(i->name, i->title, i->num, i->traffic_police, j));
			j++;
		}*/
		MessageBox::Show("Размер хеш-таблицы введён.");
	}
	else
	{
		MessageBox::Show("Размер хеш-таблицы введён из справочника инспекторы.");
		inspectors_sizeHT->Clear();
	}
}
private: System::Void textBox_name_inspectors_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_name_inspectors->Text != "") 
	{
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_name_inspectors->Text, "[^а-яА-Я]+"))
		{
			MessageBox::Show("Ошибка, введите имя, состоящее только из букв русского алфавита.");
			textBox_name_inspectors->Clear();
		}
	}
}
private: System::Void textBox_second_name_inspectors_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_second_name_inspectors->Text != "")
	{
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_second_name_inspectors->Text, "[^а-яА-Я]+"))
		{
			MessageBox::Show("Ошибка, введите фамилию, состоящую только из букв русского алфавита.");
			textBox_second_name_inspectors->Clear();
		}
	}
}
private: System::Void textBox_third_name_inspectors_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_third_name_inspectors->Text != "")
	{
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_third_name_inspectors->Text, "[^а-яА-Я]+"))
		{
			MessageBox::Show("Ошибка, введите отчество, состоящее только из букв русского алфавита.");
			textBox_third_name_inspectors->Clear();
		}
	}
}
private: System::Void textBox_titul_1_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_titul_1->Text != "")
	{
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_titul_1->Text, "[^а-яА-Я]+"))
		{
			MessageBox::Show("Ошибка, введите должность (1 слово), состоящую только из букв русского алфавита.");
			textBox_titul_1->Clear();
		}
	}
}
private: System::Void textBox_titul_2_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_titul_2->Text != "")
	{
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_titul_2->Text, "[^а-яА-Я]+"))
		{
			MessageBox::Show("Ошибка, введите должность (2 слово), состоящую только из букв русского алфавита.");
			textBox_titul_2->Clear();
		}
	}
}
private: System::Void textBox_num_inspectors_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_num_inspectors->Text != "") 
	{

		msclr::interop::marshal_context context;
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_num_inspectors->Text, "[^0-9]")|| (textBox_num_inspectors->Text == "0"))
		{
			MessageBox::Show("Ошибка, введите число от 100000000 до 999999999.");
			textBox_num_inspectors->Clear();
		}
	}
}
private: System::Void textBox_city_inspectors_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_city_inspectors->Text != "")
	{
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_city_inspectors->Text, "[^а-яА-Я]+"))
		{
			MessageBox::Show("Ошибка, введите город, состоящий только из букв русского алфавита.");
			textBox_city_inspectors->Clear();
		}
	}
}
private: System::Void textBox_street_inspectors_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_street_inspectors->Text != "")
	{
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_street_inspectors->Text, "[^а-яА-Я]+"))
		{
			MessageBox::Show("Ошибка, введите улицу, состоящую только из букв русского алфавита.");
			textBox_street_inspectors->Clear();
		}
	}
}
private: System::Void textBox_home_inspectors_TextChanged(System::Object^ sender, System::EventArgs^ e) {
	if (textBox_home_inspectors->Text != "")
	{
		if (System::Text::RegularExpressions::Regex::IsMatch(textBox_home_inspectors->Text, "[^0-9]") || (textBox_home_inspectors->Text == "0"))
		{
			MessageBox::Show("Ошибка, введите число от 1 до 1000.");
			textBox_home_inspectors->Clear();
		}
	}
}

private: System::Void hashtable_num_inspectors_Click(System::Object^ sender, System::EventArgs^ e) {
	if (sizeHT != -2)
	{
		richTextBox_otladka->Clear();
		String^ str = gcnew String(Hashtable_inspectors->Print().data());
		richTextBox_otladka->AppendText(str);
	}
	else MessageBox::Show("Ошибка, введите размер хеш-таблицы в справочниках Кандидаты или Инспекторы.");
}
//Добавление
private: System::Void add_inspectors_Click(System::Object^ sender, System::EventArgs^ e) {
	
	if (sizeHT != -2)
	{
		if ((textBox_name_inspectors->Text != "") &&
			(textBox_second_name_inspectors->Text != "") &&
			(textBox_third_name_inspectors->Text != "") &&
			(textBox_titul_1->Text != "") &&
			(textBox_titul_2->Text != "") &&
			(textBox_num_inspectors->Text != "") &&
			(textBox_city_inspectors->Text != "") &&
			(textBox_street_inspectors->Text != "") &&
			(textBox_home_inspectors->Text != ""))
		{
			int size_inspectors = Record_inspectors.size();
			msclr::interop::marshal_context context;
			/*std::string name = context.marshal_as<std::string>(textBox_name_inspectors->Text);
			std::string second_name = context.marshal_as<std::string>(textBox_second_name_inspectors->Text);
			std::string third_name = context.marshal_as<std::string>(textBox_third_name_inspectors->Text);
			std::string titul_1 = context.marshal_as<std::string>(textBox_titul_1->Text);
			std::string titul_2 = context.marshal_as<std::string>(textBox_titul_2->Text);
			int num_inspectors = Convert::ToInt32(textBox_num_inspectors->Text);
			std::string city_inspectors = context.marshal_as<std::string>(textBox_city_inspectors->Text);
			std::string street_inspectors = context.marshal_as<std::string>(textBox_street_inspectors->Text);
			int home_inspectors = Convert::ToInt32(textBox_home_inspectors->Text);*/
			list* el = new list();
			el->name = context.marshal_as<std::string>(textBox_name_inspectors->Text + " " + textBox_second_name_inspectors->Text + " " + textBox_third_name_inspectors->Text);
			el->title = context.marshal_as<std::string>(textBox_titul_1->Text + " " + textBox_titul_2->Text);
			el->num = atoi(context.marshal_as<std::string>(textBox_num_inspectors->Text).c_str());
			el->traffic_police = context.marshal_as<std::string>(textBox_city_inspectors->Text + " " + textBox_street_inspectors->Text + " " + textBox_home_inspectors->Text);
			el->index = size_inspectors;
			int search1 = Hashtable_inspectors->Search_I(*el);
			//Hashtable_inspectors->Search_I(*el);
			int result = search1;
			if (result == 1) {
				Text_inspectors->Clear();
				Text_inspectors->AppendText("Данный клиент уже есть в базе.");
			}

			if ((Convert::ToDouble(textBox_home_inspectors->Text) < 1) || (Convert::ToDouble(textBox_home_inspectors->Text) > 1000))
			{
				MessageBox::Show("Ошибка, введите номер дома в адресе отделения ГАИ от 1 до 1000.");
				textBox_home_inspectors->Clear();
			}
			else if ((Convert::ToDouble(textBox_num_inspectors->Text) < 100000000) || (Convert::ToDouble(textBox_num_inspectors->Text) > 999999999))
			{
				MessageBox::Show("Ошибка, введите номер удостоверения от 100000000 до 999999999.");
				textBox_num_inspectors->Clear();
			}
			else
			{
				int size_inspectors = Record_inspectors.size();
				msclr::interop::marshal_context context;
				list* el = new list();
					el->name = context.marshal_as<std::string>(textBox_name_inspectors->Text + " "+ textBox_second_name_inspectors->Text + " "+ textBox_third_name_inspectors->Text);
					el->title = context.marshal_as<std::string>(textBox_titul_1->Text + " " + textBox_titul_2->Text);
					el->num = atoi(context.marshal_as<std::string>(textBox_num_inspectors->Text).c_str());
					el->traffic_police = context.marshal_as<std::string>(textBox_city_inspectors->Text + " " + textBox_street_inspectors->Text + " " + textBox_home_inspectors->Text);
					el->index = size_inspectors;
					//Добавление в деревья
					//TreeAdress->insert(el->address.address, size);
					//TreeDB->insert(db, size);
					//TreeFIO->insert(FIO(el->fio.surname, el->fio.name, el->fio.f_name), size);
					Hashtable_inspectors->Add_I(*el);
					Record_inspectors.push_back(el);
					Text_inspectors->AppendText(textBox_name_inspectors->Text + " " + textBox_second_name_inspectors->Text + " " + textBox_third_name_inspectors->Text + " " + textBox_titul_1->Text + " " + textBox_titul_2->Text + " " + textBox_num_inspectors->Text + " " + textBox_city_inspectors->Text + " " + textBox_street_inspectors->Text + " " + textBox_home_inspectors->Text + "\n");
					textBox_name_inspectors->Clear();
					textBox_second_name_inspectors->Clear();
					textBox_third_name_inspectors->Clear();
					textBox_titul_1->Clear();
					textBox_titul_2->Clear();
					textBox_num_inspectors->Clear();
					textBox_city_inspectors->Clear();
					textBox_street_inspectors->Clear();
					textBox_home_inspectors->Clear();
			}
		}
		else MessageBox::Show("Ошибка, не все поля заполнены.");
	}
	else MessageBox::Show("Ошибка, введите размер хеш-таблицы.");
}

	   //экспорт
	  /* private: System::Void button_export_Click(System::Object^ sender, System::EventArgs^ e) {

		   if (Hashtable->count == 0) {
			   MessageBox::Show(this, "Вы не импортировали данные. Данное действие сотрёт данные из исходного файла.", "Error", MessageBoxButtons::OK);
		   }
		   else {
			   {
				   if (import) {
					   auto vec = std::vector<list*>(0);
					   for (auto i = Record_cars.size(); i > 0; --i) {
						   if (Record_cars.back()) {
							   vec.push_back(Record_cars.back());
							   Record_cars.pop_back();
						   }
					   }
					   System::IO::StreamWriter^ sw = gcnew System::IO::StreamWriter("Автомобили.txt");
					   int s = vec.size();
					   for (auto i = 0; i < s; ++i) {
						   list* cur = vec.back();
						   vec.pop_back();
						   String^ str = gcnew String((cur->plate + " " + cur->label + " " + cur->model + " " + cur->color).data());
						   sw->WriteLine(str);
					   }
					   sw->Close();
					   import = false;
				   }
			   }
		   }
	   }*/
//------------------------спросить у ксени название кнопки ПОИСКА------------------------------
private: System::Void button6_Click(System::Object^ sender, System::EventArgs^ e) {
	/*---------------------поиск по должности---------------------------------------*/
	/*if (radioButton_clients_DB->Checked) {//название кнопки с 
		if (richTextBox_clients_data->Text != "") {
			msclr::interop::marshal_context context;
			std::string str = context.marshal_as<std::string>(textBox_clients_db->Text);


			
				msclr::interop::marshal_context context;
				std::vector<int> result = std::vector<int>(0);
				TreeDB->findNode(TreeDB->GetRoot(), DB(day, month, year), &result);
				if (result.size() > 0) {
					richTextBox_clients_structure->Clear();
					richTextBox_clients_structure->AppendText("Люди с выбранной должностью: ");
					std::string res = "";
					for (auto i = 0; i < result.size(); ++i) {
						richTextBox_clients_structure->AppendText(gcnew String((result[i] + 1).ToString()) + " ");
					}
				}
				else {
					richTextBox_clients_structure->Clear();
					richTextBox_clients_structure->AppendText("Нет инспекторов с этой должностью.");
				}
			
			else {
				richTextBox_clients_structure->Clear();
				richTextBox_clients_structure->AppendText("Некоректный вв.");
			}
		}
		else {
			richTextBox_clients_structure->Clear();
			richTextBox_clients_structure->AppendText("Отсутствуют сведения о должности.");
		}
	}*/
	/*-----------------------поиск по ФИО--------------------------------------*/
	/*if (radioButton_clients_FIO->Checked) {
		if ((textBox_clients_name->Text != "") && (textBox_clients_surname->Text != "") && (textBox_clients_lastname->Text != "")) {
			msclr::interop::marshal_context context;
			std::string name = context.marshal_as<std::string>(textBox_clients_name->Text);
			std::string surname = context.marshal_as<std::string>(textBox_clients_surname->Text);
			std::string lastname = context.marshal_as<std::string>(textBox_clients_lastname->Text);
			std::vector<int> result = std::vector<int>(0);
			TreeFIO->findNode(TreeFIO->GetRoot(), FIO(surname, name, lastname), &result);
			if (result.size() > 0) {
				richTextBox_clients_structure->Clear();
				richTextBox_clients_structure->AppendText("Инспекторы с этим ФИО : ");
				std::string res = "";
				for (auto i = 0; i < result.size(); ++i) {
					richTextBox_clients_structure->AppendText(gcnew String((result[i] + 1).ToString()) + " ");
				}
			}
			else {
				richTextBox_clients_structure->Clear();
				richTextBox_clients_structure->AppendText("Инспектора с данным ФИО нет.");
			}
		}
		else {
			richTextBox_clients_structure->Clear();
			richTextBox_clients_structure->AppendText("Отсутствует что-то из следующего: имя, фамилия, отчество.");
		}
	}
	*/
	/*-----------------------поиск по адресу------------------------------------------------------------------------------------------------------------*/
	/*if (radioButton_clients_adress->Checked) {
		if (textBox_clients_address->Text != "") {
			msclr::interop::marshal_context context;
			std::vector<int> result = std::vector<int>(0);
			std::string adres = context.marshal_as<std::string>(textBox_clients_address->Text);
			TreeAdress->findNode(TreeAdress->GetRoot(), Adress(adres), &result);
			if (result.size() > 0) {
				richTextBox_clients_structure->Clear();
				richTextBox_clients_structure->AppendText("Инспекторы, прикрепленные по этому адресу: ");
				for (auto i = 0; i < result.size(); ++i) {
					richTextBox_clients_structure->AppendText(gcnew String((result[i] + 1).ToString()) + " ");
				}
			}
			else {
				richTextBox_clients_structure->Clear();
				richTextBox_clients_structure->AppendText("Не было инспекторов людей по этому адресу.");
			}
		}
		else {
			richTextBox_clients_structure->Clear();
			richTextBox_clients_structure->AppendText("Отсутствует адрес.");
		}
	}*/
	/*------------------------------поиск по номеру удостоверения-------------------------------------------------------------------------------------*/
	//if (textBox_num_inspectors->Checked) { //необходимо название кнопки (textBox_num_inspectors)
		if (textBox_num_inspectors->Text != "") {//необходимо название кнопки(textBox_num_inspectors)
			msclr::interop::marshal_context context;
			list* el = new list();
			el->name = context.marshal_as<std::string>(textBox_name_inspectors->Text + " " + textBox_second_name_inspectors->Text + " " + textBox_third_name_inspectors->Text);
			el->title = context.marshal_as<std::string>(textBox_titul_1->Text + " " + textBox_titul_2->Text);
			el->num = atoi(context.marshal_as<std::string>(textBox_num_inspectors->Text).c_str());
			el->traffic_police = context.marshal_as<std::string>(textBox_city_inspectors->Text + " " + textBox_street_inspectors->Text + " " + textBox_home_inspectors->Text);
			//el->index = size_inspectors;
			int search1 = Hashtable_inspectors->Search_I(*el);
			//Hashtable_inspectors->Search_I(*el);
			
			if (search1 != -1) {
				inspectors_rez->Clear();//необходимо название кнопки
				inspectors_rez->AppendText("Клиент с данным номером удостоверения находится под номером ");//необходимо название кнопки + куда выводится результаты поиска и т.д
				inspectors_rez->AppendText(gcnew String((search1 + 1).ToString()) + " .");//необходимо название кнопки
			}
			else {
				inspectors_rez->Clear();//необходимо название кнопки
				
				MessageBox::Show("Инспектор с данным номером удостоверения не найден");
				textBox_num_inspectors->Clear();
			}
		}
		else {
			MessageBox::Show("Введите номер удостоверения");
			textBox_num_inspectors->Clear();
		}

}

//------------------------спросить у ксени название кнопки УДАЛЕНИЯ------------------------------
private: System::Void button14_Click(System::Object^ sender, System::EventArgs^ e) 
{

	if (sizeHT != -2)
	{

		if ((textBox_name_inspectors->Text != "") &&
			(textBox_second_name_inspectors->Text != "") &&
			(textBox_third_name_inspectors->Text != "") &&
			(textBox_titul_1->Text != "") &&
			(textBox_titul_2->Text != "") &&
			(textBox_num_inspectors->Text != "") &&
			(textBox_city_inspectors->Text != "") &&
			(textBox_street_inspectors->Text != "") &&
			(textBox_home_inspectors->Text != "")) 
		{
			int size_inspectors = Record_inspectors.size();
			msclr::interop::marshal_context context;
			list* el = new list();
			el->name = context.marshal_as<std::string>(textBox_name_inspectors->Text + " " + textBox_second_name_inspectors->Text + " " + textBox_third_name_inspectors->Text);
			el->title = context.marshal_as<std::string>(textBox_titul_1->Text + " " + textBox_titul_2->Text);
			el->num = atoi(context.marshal_as<std::string>(textBox_num_inspectors->Text).c_str());
			el->traffic_police = context.marshal_as<std::string>(textBox_city_inspectors->Text + " " + textBox_street_inspectors->Text + " " + textBox_home_inspectors->Text);
			el->index = size_inspectors;
			int search1 = Hashtable_inspectors->Search_I(*el);
			//Hashtable_inspectors->Search_I(*el);
			int result = search1;
			if (result == 1) {
				/*Удалить->да->удаление из деревьев  и ХТ
				*/
			}

		}


	}




}




};
}
